image: ubuntu:20.04

variables:
    GIT_SUBMODULE_STRATEGY: recursive
    CI_RUN: '1'
    ODOO_HELPER_INSTALL_PATH: "$CI_PROJECT_DIR"
    TEST_TMP_DIR: "/tmp/odoo-helper-tests"
    DEBIAN_FRONTEND: 'noninteractive'
    ALWAYS_ANSWER_YES: '1'
    LANG: 'C.UTF-8'
    LC_ALL: 'C.UTF-8'
    LANGUAGE: 'C.UTF-8'
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache"
    APT_DIR: "$CI_PROJECT_DIR/.apt-cache"
    APT_STATE_LISTS: "$APT_DIR/lists"
    APT_CACHE_ARCHIVES: "$APT_DIR/archives"
    PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/odoo-helper-scripts"

cache:
    key: ${CI_JOB_NAME}
    paths:
        - .cache
stages:
  - lint
  - test
  - build
  - release
  - deploy

shellcheck:
    image: koalaman/shellcheck-alpine:stable
    stage: lint
    before_script:
        - shellcheck --version
    script:
        - shellcheck -s bash -x -a --color -e "SC1090,SC1091,SC2034" ./bin/* ./lib/*.bash
    rules:
        - if: $CI_PIPELINE_SOURCE == "merge_request_event"
        - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
          when: never
        - if: $CI_COMMIT_BRANCH
        - if: $CI_COMMIT_TAG !~ /^v\d.*/

flake8:
    image: python:3
    stage: lint
    before_script:
        - pip install flake8
    script:
        - flake8 ./lib/pylib/
    rules:
        - if: $CI_PIPELINE_SOURCE == "merge_request_event"
        - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
          when: never
        - if: $CI_COMMIT_BRANCH
        - if: $CI_COMMIT_TAG !~ /^v\d.*/


.test:definition: &tests-definition
    stage: test
    before_script:
        # Setup PIP Cache
        - mkdir -p .cache && chmod a+rwx -R .cache

        # Install deps
        - apt-get update -qq && apt-get install -yqq adduser sudo locales ruby git
        - update-locale LANG=C.UTF-8 && update-locale LC_ALL=C.UTF-8 && update-locale LANGUAGE=C.UTF-8
        - gem install bashcov -v 1.8.2
        - gem install codecov simplecov-console

        # Configure Odoo user
        - adduser -q odoo
        - echo ' odoo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
        - sudo -u odoo -HE git config --global user.email "test-oh@test.test"
        - sudo -u odoo -HE git config --global user.name "test-oh"
    script:
        - bash install-system.bash
        - sudo -u odoo -HE bashcov tests/test.bash
    coverage: '/COVERAGE:.*\s+(\d{1,3}\.\d{2}\%)/'
    artifacts:
        paths:
             - coverage
        expire_in: 3 day
        when: always
    rules:
        - if: $CI_PIPELINE_SOURCE == "merge_request_event"
        - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
          when: never
        - if: $CI_COMMIT_BRANCH


tests:ubuntu:20.04:
    image: ubuntu:20.04
    <<: *tests-definition

tests:ubuntu:22.04:
    image: ubuntu:22.04
    <<: *tests-definition

.build:package:base:definition: &build-package-base-def
    image: ubuntu:20.04
    stage: build
    variables:
        ODOO_HELPER_ROOT: $CI_PROJECT_DIR
        ODOO_HELPER_BIN: $CI_PROJECT_DIR/bin
        ODOO_HELPER_LIB: $CI_PROJECT_DIR/lib
    before_script:
        - apt-get update -qq && apt-get install -qqy ruby ruby-dev make gcc curl
        - gem install fpm

build:package:tag:
    <<: *build-package-base-def
    script:
        - bash scripts/build_packages.bash
    after_script:
        - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file "build/odoo-helper-scripts.deb" "${PACKAGE_REGISTRY_URL}/${CI_COMMIT_TAG#v}/odoo-helper-scripts_${CI_COMMIT_TAG#v}.deb"'
    rules:
        - if: $CI_COMMIT_TAG =~ /^v\d.*/

build:package:branch:dev:
    <<: *build-package-base-def
    script:
        - bash scripts/build_packages.bash "${CI_COMMIT_REF_NAME}"
    after_script:
        - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file "build/odoo-helper-scripts.deb" "${PACKAGE_REGISTRY_URL}/${CI_COMMIT_REF_NAME}/odoo-helper-scripts_${CI_COMMIT_REF_NAME}.deb"'
    when: manual
    rules:
        - if: $CI_PIPELINE_SOURCE == "merge_request_event"

build:package:branch:master:
    <<: *build-package-base-def
    script:
        - bash scripts/build_packages.bash "${CI_COMMIT_REF_NAME}"
    after_script:
        - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file "build/odoo-helper-scripts.deb" "${PACKAGE_REGISTRY_URL}/${CI_COMMIT_REF_NAME}/odoo-helper-scripts_${CI_COMMIT_REF_NAME}.deb"'
    rules:
        - if: $CI_COMMIT_BRANCH == "master"

do_release:tag:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    # Run this job when a tag is created manually
    - if: $CI_COMMIT_TAG =~ /^v\d.*/
  before_script:
    - apk add coreutils
  script:
    - echo "Preparing release $CI_COMMIT_TAG."
    - csplit --prefix=CHANGELOG. --suffix=%02d.md CHANGELOG.md '/---/'
  release:
    tag_name: $CI_COMMIT_TAG
    name: "${CI_COMMIT_TAG}"
    description: "./CHANGELOG.00.md"
    assets:
      links:
        - name: "odoo-helper-scripts_${CI_COMMIT_TAG}.deb"
          url: "$PACKAGE_REGISTRY_URL/${CI_COMMIT_TAG#v}/odoo-helper-scripts_${CI_COMMIT_TAG#v}.deb"
          link_type: "package"
 
pages:
    image: ubuntu:20.04
    stage: deploy
    before_script:
        - apt-get update
        - apt-get install -y python3-pip
        - bash install-system.bash
        - python3 -m pip install mkdocs mkdocs-cinder==0.14.0
    script:
        - bash scripts/build_docs.bash
    artifacts:
        paths:
            - public
    rules:
        - if: $CI_COMMIT_BRANCH == "master"
